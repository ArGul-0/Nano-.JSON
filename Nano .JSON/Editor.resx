<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>15, 12</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AADo6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo
        6P/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo
        6P/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+fn5//m5ub/5ubm/+bm5v/m5ub/5eXm/+bl
        5v/l5eX/5uXm/+bm5v/m5ub/5ubm/+bl5v/m5eb/5uXl/+bm5v/m5ub/5uXm/+fn5//o6Oj/6Ojo/+jo
        6P/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo6P/n5+f/6enp//Ly8v/z8/T/8/Pz//Pz
        8//08/T/9PT0//T09P/08/T/8/P0//Pz8//08/P/9PP0//Tz9P/z8/P/8/Pz//T09P/08/T/7Ozs/+bm
        5v/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo6P/o6Oj/5+fn/+zs7P/j4+P/srKy/6io
        qP+pqan/qamp/6mpqf+pqan/qamp/6mpqf+pqan/qamp/6ioqP+np6f/qaip/6mpqf+pqan/qamp/6ur
        q//W1tb/7+/v/+fn5//o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+no6f/o6Oj/6Ojo/+fn5//r6+v/29vb/2lp
        af9mZmb/dnV2/3Nyc/9zc3P/c3Nz/3Nzc/9zc3P/c3Nz/3Nzc/9xcXH/d3d3/3t7e/90dHT/cHBw/3Fx
        cf90dHT/b25u/1pZWf+/v7//7+/v/+bm5v/o6Oj/6Ojo/+jo6P/o6Oj/6eno/+jo6P/o6Oj/5ubm//T0
        9P+QkJD/enp6//T09P/u7u7/7u7u/+/u7v/v7+//7+7u/+7u7v/u7u7/7u7u//Ly8v/Z2dn/ycnJ/+/u
        7v/8/Pz/9vX1/+3t7f/4+Pj/paWl/2lpaf/s7Oz/5+fn/+jo5//o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo
        6P/m5ub/8/Pz/3x8fP+lpaX/9PT0/+jo6P/v7+//7+/v/+/v7//v7+//7+/v/+/v7//s7Oz/+vr6/6ur
        q/9OTU7/cnJy/5OTk//Nzc7/7e3t/+zr6//Pz8//Y2Nj/+Lh4v/q6ur/5+fn/+jo6P/o6Oj/6Ojo/+jo
        6P/o6Oj/6Ojo/+bm5v/z8/P/fn5+/5+fn//49/f/09PT/7++v//BwMD/wMDA/8HBwf/BwcH/wcHB/8HA
        wf/Dw8P/yMjI/3Fwcf+vr6//fHx8/0tLS/+1tbX/+vr6/8bGxv9mZWX/4+Li/+np6f/n5+f/6Ojo/+jo
        6P/o6Oj/6Ojo/+jo6P/o6Oj/5ubm//Pz8/99fX3/pKSk/+Tk5P9iYmL/bW1u/3R0dP90dHT/b29v/25u
        bv9tbW3/cHBw/2VlZf+0tLT/iomJ/4+Pjv92dnb/lZWV/15eXv+8vLz/1tXV/1xcXP/j4+P/6enp/+fn
        5//o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo6P/m5ub/8/Pz/3x8fP+pqKj/z8/P/2VkZP/ExMT/sbCx/6ur
        q//Hx8f/xsbG/8XFxf+/v7//urq6/8vLy/+ysrL/SUlJ/6ampv/Hx8f/qamp/11dXf+zs7P/oKCg/9rZ
        2f/r6+v/5+fn/+jo6P/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+bm5v/z8/P/fHx8/6ioqP/S0tL/ZmZm/7+/
        v/+CgoL/paWl/5GRkf94eHj/hISE/7S0tP+3uLj/tra2/9jY2P+Hh4f/eHh4/76+vv+/v7//qamp/15e
        Xv+7u7v/8vLy/+Xl5f/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo6P/o6Oj/5ubm//Pz8/98fHz/qKio/9LS
        0v9mZmb/v7+//4eHh/+ysrL/qqqq/56env+kpKT/u7u7/729vf+3t7f/urm6/93d3f98fHz/d3d3/8DA
        wP+/v7//qamo/1paWv+7u7v/9PT0/+Xl5f/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo6P/m5ub/8/Pz/319
        ff+oqKj/0dHR/2ZmZv+/v7//h4eI/7Gxsf+Pj4//fHt8/35+fv94eHj/gICA/7e3t/+4uLj/ubm5/97e
        3v98fHz/eXl5/8DAwP+/v7//q6ur/1RUVP+3t7f/8/Pz/+bm5v/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+bm
        5v/z8/P/fX19/6ioqP/R0dH/ZWVl/8LCwv+Kior/rq6u/6yrrP+ioqL/pKWl/6Wlpf+np6j/tLS1/7i4
        uP+2trb/urq6/97e3v96enr/eXl5/8XFxv+Li4v/b29v/2ZmZv+6urr/7+/v/+bm5v/o6Oj/6Ojo/+jo
        6P/o6Oj/5ubm//Pz8/99fX3/qKip/9HR0f9oaGj/s7Oz/3t7fP+1tbX/jIyM/3Z2dv95eXn/eXh5/3h4
        eP9ubm7/i4uL/729vf+1tbX/urq6/9nZ2f9+fn7/ZmZm/3Z2dv/Hx8f/hYWF/319ff/09PT/5ubm/+jo
        6P/o6Oj/6Ojo/+jo6P/m5ub/8/Pz/319ff+pqKn/0NDQ/2pqav+kpKT/cHBw/7q5uv+urq7/p6en/6io
        qP+pqan/s7Oz/7Kysv+1tbX/ubm5/7i4uP+8vLz/iYmJ/8PDw/91dXX/e3t7/5ycnP9gYGD/zs7O/+3t
        7f/n5+f/6Ojo/+jo6P/o6Oj/6Ojo/+bm5v/z8/P/fHx8/6ioqP/S0dL/ZWVl/8HBwf+CgoL/q6ur/4eH
        iP9vb2//dHR1/3x8fP+1tbX/ubm6/7i4uP+3t7f/tra2/8HBwf91dXX/oqKi//Pz8/+CgoL/Z2Zn/8rK
        yv/x8fH/5ubm/+jo6P/o6Oj/6Ojo/+jo6P/o6Oj/5ubm//Pz8/98fHz/qKio/9DQ0P9oaGj/ycnJ/6en
        p/+vr6//xsbG/8HBwf/CwsL/w8PD/8LCwv/BwcH/wsLC/8LCwv/AwMD/zMvM/39/f/+kpKT/4eDg/6mp
        qf/o6Oj/7u7u/+bm5v/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo6P/m5ub/8/Pz/319ff+np6f/2NjY/1VV
        Vf98fHz/goKC/39/f/99fX3/f39//319ff99fX3/fX19/35+fv99fX3/f39//39+f/+EhIT/Wlpa/7a2
        tv/S0tH/Wlpa/+Pj4//o6Oj/6Ofo/+jo6P/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+bm5v/z8/P/fn19/6Gh
        of/09PT/uLi4/6urq/+kpKT/rKys/6urq/+jo6P/rq2t/6enp/+mpqb/paSl/6ioqP+joqP/o6Ok/6Gh
        of+tra3/7Ovs/8vLy/9mZmb/4uLi/+rp6v/o5+f/6Ojo/+jo6P/o6Oj/6Ojo/+jo6P/o6Oj/5ubm//Pz
        8/9+fn7/n5+f//j4+P/a2tr/ubm5/+7u7v/BwcH/yMjI//X19f+5uLj/3Nzc/+Dg4P/p6en/19fX//T0
        9P/x8fH/8vLy/+/v7//t7e3/ycjJ/2VlZf/j4+P/6urq/+fn5//o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo
        6P/m5ub/8/Pz/35+fv+enp//+vr6/7i4uP+Hh4f/mJiY/6mpqf+CgoL/jo6O/5mZmf+RkZH/l5eX/56e
        nv92dnb/7Ozs/+7u7v/w8PD/7u7u//j4+P/R0dH/ZmVl/+Pj4//q6ur/6Ofo/+jo6P/o6Oj/6Ojo/+jo
        6P/o6Oj/6Ojo/+bm5v/z8/P/fX19/6CgoP/y8vL/9PT0/8PDw/+ampr/pqam/6qqqv+MjIz/2NjY/5+f
        n/+AgID/fX19/5OTk//t7e3/qKio/4ODg/+Hh4f/ioqK/4CAgP9iYmL/4uLi/+rq6v/n5+j/6Ojo/+jo
        6P/o6Oj/6Ojo/+jo6P/o6Oj/5ubm//Pz8/9+fn7/oKCh//Pz8//t7e3/vr6+/5aWlv+EhIT/mZmZ/7Sz
        tP+CgoL/n5+f/5CQkP+pqan/rKys/6ioqP9eXl7/mpqa/5mZmf+hoaH/W1tb/4GBgf/t7e3/5+fn/+jo
        6P/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo6P/m5ub/8/Pz/35+fv+goKD/9PT0/+fn5v/i4uL/5eXl/9rZ
        2v/U1NT/8O/v/87Nzf/i4uL/5OTk/+Xl5f/r6ur/hISE/5OTk//IyMj/xsbG/319ff96enr/6Ofn/+rq
        6v/n5+f/6Ojo/+jo6P/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+bm5v/z8/P/fn5+/6Kiov/y8vL/4+Pj/+fn
        5//n5uf/6unp/+rq6v/k5OT/7Ozs/+jn6P/n5+f/5OTk//Ly8v+Hh4f/k5KT/8jIyP90dHT/cnJy/+no
        6P/r6+v/5+fm/+jo6P/o6Oj/6Ojo/+jo6P/o6Oj/6ejo/+jo6P/o6Oj/5ubm//T09P9+fn7/mpqa////
        ///w8PD/8vLy//Ly8v/x8fH/8fHx//Ly8v/x8fH/8vLy//Ly8v/w8PD//f39/4yMjP+YmJj/fn19/3Jy
        cv/p6en/6+vr/+bm5v/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo6P/m5ub/8fHx/7a2
        tv9ZWVn/rKys/7a1tf+zs7P/tLO0/7S0tP+0tLT/tLS0/7S0tP+0tLT/tLS0/7Kysv+6urr/eHd4/1ZV
        Vf94eHj/6Ojo/+vr6//m5ub/6Ojo/+jo6P/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo
        6P/n5+f/7u7u/6+vr/9qamr/aGdn/2hoaP9oaGj/aGho/2hoaP9oaGj/aGho/2hoaP9oaGj/aGho/2ho
        aP9paWn/g4OD/+bl5v/s7Oz/5ubm/+jo6P/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo6P/o6Oj/6ejo/+jo
        6P/o6Oj/6Ojo/+jo6P/n5+f/8fHx/+7u7v/q6ur/6+vr/+vr6//r6+v/6+vr/+vr6//r6+v/6+vr/+vr
        6//r6+v/6+vr/+np6f/v7+//6urq/+fn5//o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo
        6P/p6en/6Ojo/+jo6P/o6Oj/6Ojo/+jo6P/m5ub/5+fn/+jo6P/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo
        6P/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+fm5//n5+f/6Ojo/+jo6P/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo
        6P/o6Oj/6Ojo/+np6f/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo6P/o6Oj/6Ofo/+jo
        6P/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo
        6P/o6Oj/6Ojo/+jo6P/o6Oj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>